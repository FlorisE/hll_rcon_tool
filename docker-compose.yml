version: '2.4'

networks:
  server1:
  server2:
  server3:
  server4:
  common:


services:
  broadcast: &broadcast
    hostname: broadcast
    extends:
      file: docker-compose-common-components.yml
      service: python
    command: broadcast_loop
    depends_on:
      - postgres
      - redis
    networks:
      - server1
      - common
  #stats: &stats
  # hostname: stats
  #  extends:
  #    file: docker-compose-common-components.yml
  #    service: python
  #  command: stats_loop
  #  depends_on:
  #    - postgres
  #    - redis
  logs_event_loop: &logs_event_loop
    hostname: logs_event_loop
    extends:
      file: docker-compose-common-components.yml
      service: python
    command: log_loop
    depends_on:
      - postgres
      - redis
    networks:
      - server1
      - common
  welcome_message_loop: &welcome_message_loop
    hostname: welcome_message_loop
    extends:
      file: docker-compose-common-components.yml
      service: python
    command: welcome_message_loop
    depends_on:
      - postgres
      - redis
    networks:
      - server1
      - common
  backend_1: &backend
    hostname: api
    extends:
      file: docker-compose-common-components.yml
      service: python
    command: web
    depends_on:
        - postgres
        - redis
    networks:
      server1:
        aliases:
          - backend
      common:
  frontend: &frontend
    image: maresh/hll_rcon_frontend:latest
    ports:
      - ${RCONWEB_PORT}:80
    restart: always
    environment:
      HLL_HOST: ${HLL_HOST}
      RCONWEB_PASSWORD: ${RCONWEB_PASSWORD}
      RCONWEB_USERNAME: ${RCONWEB_USERNAME}
    depends_on:
        - backend_1
    networks:
      - server1
      - common
  redis:
    image: redislabs/redistimeseries:1.2.6
    restart: always
    volumes:
      - ./redis_data:/data
    networks:
      - common
  postgres:
    image: postgres:12
    restart: always
    environment:
      # If a password is not defined this container will fail to create
      POSTGRES_PASSWORD: ${HLL_DB_PASSWORD}
      POSTGRES_USER: rcon
      POSTGRES_DB: rcon
      PGDATA: /data
    volumes:
      - ./db_data:/data
    networks:
      - common

  ############ SERVER 2  #############
  broadcast_2:
    <<: *broadcast
    hostname: broadcast_2
    environment: &env2
      HLL_HOST: ${HLL_HOST_2}
      HLL_PORT: ${HLL_PORT_2}
      HLL_PASSWORD: ${HLL_PASSWORD_2}
      LOGGING_LEVEL: 'INFO'
      LOGGING_PATH: /logs/
      REDIS_URL: redis://redis:6379/1
      DB_URL: 'postgres://rcon:${HLL_DB_PASSWORD}@postgres:5432'
      DISCORD_WEBHOOK_AUDIT_LOG: ${DISCORD_WEBHOOK_AUDIT_LOG_2}
      RCONWEB_PASSWORD: ${RCONWEB_PASSWORD_2}
      RCONWEB_USERNAME: ${RCONWEB_USERNAME_2}
      RCONWEB_API_SECRET: ${RCONWEB_API_SECRET}
      SERVER_SHORT_NAME: ${SERVER_SHORT_NAME_2}
      DISCORD_CHAT_WEBHOOK: ${DISCORD_CHAT_WEBHOOK_2}
      DISCORD_CHAT_WEBHOOK_ALLOW_MENTIONS: ${DISCORD_CHAT_WEBHOOK_ALLOW_MENTIONS}
      RCONWEB_PORT: ${RCONWEB_PORT_2}
      DISCORD_PING_TRIGGER_WORDS: ${DISCORD_PING_TRIGGER_WORDS_2}
      DISCORD_PING_TRIGGER_ROLES: ${DISCORD_PING_TRIGGER_ROLES_2}
      DISCORD_PING_TRIGGER_WEBHOOK: ${DISCORD_PING_TRIGGER_WEBHOOK_2}
      DISCORD_KILLS_WEBHOOK: ${DISCORD_KILLS_WEBHOOK_2}
      DISCORD_SEND_KILL_UPDATES: ${DISCORD_SEND_KILL_UPDATES_2}
      DISCORD_SEND_TEAM_KILL_UPDATES: ${DISCORD_SEND_TEAM_KILL_UPDATES_2}
    restart: on-failure
    networks:
      - common
      - server2
    depends_on:
      - frontend
  #stats_2:
  #  <<: *stats
  #  hostname: stats_2
  #  environment:
  #    <<: *env2
  #  restart: on-failure
  #  depends_on:
  #    - frontend
  logs_event_loop_2:
    <<: *logs_event_loop
    hostname: logs_event_loop_2
    environment:
      <<: *env2
    restart: on-failure
    networks:
      - common
      - server2
    depends_on:
      - frontend
  welcome_message_loop_2:
    <<: *welcome_message_loop
    hostname: welcome_message_loop_2
    environment:
      <<: *env2
    restart: on-failure
    networks:
      - common
      - server2
    depends_on:
      - frontend
  backend_2:
    <<: *backend
    hostname: api_2
    environment:
      <<: *env2
    restart: on-failure
    networks:
      common:
      server2:
        aliases:
          - backend
    depends_on:
      - frontend
  frontend_2:
    <<: *frontend
    ports:
      - ${RCONWEB_PORT_2}:80
    environment:
      <<: *env2
    restart: on-failure
    networks:
      - common
      - server2
    depends_on:
      - backend_2

  ############ SERVER 3  #############
  broadcast_3:
    <<: *broadcast
    hostname: broadcast_3
    environment: &env3
      HLL_HOST: ${HLL_HOST_3}
      HLL_PORT: ${HLL_PORT_3}
      HLL_PASSWORD: ${HLL_PASSWORD_3}
      LOGGING_LEVEL: 'INFO'
      LOGGING_PATH: /logs/
      REDIS_URL: redis://redis:6379/2
      DB_URL: 'postgres://rcon:${HLL_DB_PASSWORD}@postgres:5432'
      DISCORD_WEBHOOK_AUDIT_LOG: ${DISCORD_WEBHOOK_AUDIT_LOG_3}
      RCONWEB_PASSWORD: ${RCONWEB_PASSWORD_3}
      RCONWEB_USERNAME: ${RCONWEB_USERNAME_3}
      RCONWEB_API_SECRET: ${RCONWEB_API_SECRET}
      SERVER_SHORT_NAME: ${SERVER_SHORT_NAME_3}
      DISCORD_CHAT_WEBHOOK: ${DISCORD_CHAT_WEBHOOK_3}
      DISCORD_CHAT_WEBHOOK_ALLOW_MENTIONS: ${DISCORD_CHAT_WEBHOOK_ALLOW_MENTIONS}
      RCONWEB_PORT: ${RCONWEB_PORT_3}
      DISCORD_PING_TRIGGER_WORDS: ${DISCORD_PING_TRIGGER_WORDS_3}
      DISCORD_PING_TRIGGER_ROLES: ${DISCORD_PING_TRIGGER_ROLES_3}
      DISCORD_PING_TRIGGER_WEBHOOK: ${DISCORD_PING_TRIGGER_WEBHOOK_3}
      DISCORD_KILLS_WEBHOOK: ${DISCORD_KILLS_WEBHOOK_3}
      DISCORD_SEND_KILL_UPDATES: ${DISCORD_SEND_KILL_UPDATES_3}
      DISCORD_SEND_TEAM_KILL_UPDATES: ${DISCORD_SEND_TEAM_KILL_UPDATES_3}
    restart: on-failure
    networks:
      - common
      - server3
    depends_on:
      - frontend_2
  #stats_3:
  #  <<: *stats
  #  hostname: stats_3
  #  environment:
  #    <<: *env3
  #  restart: on-failure
  #  depends_on:
  #    - frontend_2
  logs_event_loop_3:
    <<: *logs_event_loop
    hostname: logs_event_loop_3
    environment:
      <<: *env3
    restart: on-failure
    networks:
      - common
      - server3
    depends_on:
      - frontend_2
  welcome_message_loop_3:
    <<: *welcome_message_loop
    hostname: welcome_message_loop_3
    environment:
      <<: *env3
    restart: on-failure
    networks:
      - common
      - server3
    depends_on:
      - frontend_2
  backend_3:
    <<: *backend
    hostname: api_3
    environment:
      <<: *env3
    restart: on-failure
    networks:
      common:
      server3:
        aliases:
          - backend
    depends_on:
      - frontend_2
  frontend_3:
    <<: *frontend
    ports:
      - ${RCONWEB_PORT_3}:80
    environment:
      <<: *env3
    restart: on-failure
    networks:
      - common
      - server3
    depends_on: 
      - backend_3

  ############ SERVER 4  #############
  broadcast_4:
    <<: *broadcast
    hostname: broadcast_4
    environment: &env4
      HLL_HOST: ${HLL_HOST_4}
      HLL_PORT: ${HLL_PORT_4}
      HLL_PASSWORD: ${HLL_PASSWORD_4}
      LOGGING_LEVEL: 'INFO'
      LOGGING_PATH: /logs/
      REDIS_URL: redis://redis:6379/3
      DB_URL: 'postgres://rcon:${HLL_DB_PASSWORD}@postgres:5432'
      DISCORD_WEBHOOK_AUDIT_LOG: ${DISCORD_WEBHOOK_AUDIT_LOG_4}
      RCONWEB_PASSWORD: ${RCONWEB_PASSWORD_4}
      RCONWEB_USERNAME: ${RCONWEB_USERNAME_4}
      RCONWEB_API_SECRET: ${RCONWEB_API_SECRET}
      SERVER_SHORT_NAME: ${SERVER_SHORT_NAME_4}
      DISCORD_CHAT_WEBHOOK: ${DISCORD_CHAT_WEBHOOK_4}
      DISCORD_CHAT_WEBHOOK_ALLOW_MENTIONS: ${DISCORD_CHAT_WEBHOOK_ALLOW_MENTIONS}
      RCONWEB_PORT: ${RCONWEB_PORT_4}
      DISCORD_PING_TRIGGER_WORDS: ${DISCORD_PING_TRIGGER_WORDS_4}
      DISCORD_PING_TRIGGER_ROLES: ${DISCORD_PING_TRIGGER_ROLES_4}
      DISCORD_PING_TRIGGER_WEBHOOK: ${DISCORD_PING_TRIGGER_WEBHOOK_4}
      DISCORD_KILLS_WEBHOOK: ${DISCORD_KILLS_WEBHOOK_4}
      DISCORD_SEND_KILL_UPDATES: ${DISCORD_SEND_KILL_UPDATES_4}
      DISCORD_SEND_TEAM_KILL_UPDATES: ${DISCORD_SEND_TEAM_KILL_UPDATES_4}
    restart: on-failure
    networks:
      - common
      - server4
    depends_on:
      - frontend_3
  #stats_4:
  #  <<: *stats
  #  hostname: stats_4
  #  environment:
  #    <<: *env4
  #  restart: on-failure
  #  depends_on:
  #   - frontend_3
  logs_event_loop_4:
    <<: *logs_event_loop
    hostname: logs_event_loop_4
    environment:
      <<: *env4
    restart: on-failure
    networks:
      - common
      - server4
    depends_on:
      - frontend_3
  welcome_message_loop_4:
    <<: *welcome_message_loop
    hostname: welcome_message_loop_4
    environment:
      <<: *env4
    restart: on-failure
    networks:
      - common
      - server4
    depends_on:
      - frontend_3
  backend_4:
    <<: *backend
    hostname: api_4
    environment:
      <<: *env4
    restart: on-failure
    networks:
      common:
      server4:
        aliases:
          - backend
    depends_on:
      - frontend_3
  frontend_4:
    <<: *frontend
    ports:
      - ${RCONWEB_PORT_4}:80
    environment:
      <<: *env4
    restart: on-failure
    networks:
      - common
      - server4
    depends_on:
      - backend_4
